debug: false
management.endpoints.web.exposure.include: "*"

logging:
  level:
    com.example.kiosk: debug
    org.springframework.web.servlet: debug
    org.hibernate.type.descriptor.sql.BasicBinder: trace

spring:

  main:
    allow-bean-definition-overriding: true

  config.active.on-profile: heroku
  datasource:
    #?? db
    url: jdbc:mysql://u5ir6w5clvtodsmt:sy66v87a7dhjwkmk@o2olb7w3xv09alub.cbetxkdyhwsb.us-east-1.rds.amazonaws.com:3306/i8wms28a02iwrvld
    username: u5ir6w5clvtodsmt
    password: sy66v87a7dhjwkmk


  #    url: jdbc:mysql://u5ir6w5clvtodsmt:sy66v87a7dhjwkmk@o2olb7w3xv09alub.cbetxkdyhwsb.us-east-1.rds.amazonaws.com:3306/i8wms28a02iwrvld
  #    username: u5ir6w5clvtodsmt
  #    password: sy66v87a7dhjwkmk
  #    driver-class-name: com.mysql.cj.jdbc.Driver


  thymeleaf:
    prefix: classpath:template/
    suffix: .html
    cache: false

  jpa:
    defer-datasource-initialization: true
    hibernate.ddl-auto: create
    open-in-view: false
    show-sql: true
    properties:
      hibernate.format_sql: true
      hibernate.default_batch_fetch_size: 100

  sql.init.mode: always

  data.rest:
    base-path: /api
    detection-strategy: annotated

  devtools:
    livereload:
      enabled: true
    restart:
      enabled: true

  image:
    path: /Users/ANJH/Documents/
---
#spring:
#

---
# 헤로쿠 설정
spring:
  config.activate.on-profile: heroku
  datasource:
    url: ${JAWSDB-URL}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa.hibernate.ddl-auto: create
  sql.init.mode: always
  hikari.maximum-pool-size: 9
